ExtPing
测试某个IP或者域名的网络是否正常。输入是IP地址或者域名地址。输出是接收到的直接数，往返时间，TTL时间。最后输出的丢包率。

main函数的PDL
{
	创建ICMP的socket
	If 不成功
	{
	　　提示用户创建raw socket 需要超级权限
	　　返回
	}
	配置socket的配置选项：缓冲区的大小

	回收超级权限
	检测参数个数是否正确，if不正确则提示用户本程序的使用方法

	设置目的IP地址
	{
	　　如果输入的是点分十进制的IP地址，则直接转换成二进制IP地址
	    如果输入的是域名地址，则先获取主机的信息，之后再转换成二进制IP地址
	}
	
	调用main_loop循环发送和接收ICMP消息
}

main_loop函数的PDL
{
	依次向目标主机发送TRANSMIT_TIME次数据
	{
		记录当前发送包的序号
		调用sendPacket发送一次ICMP探测
		定时等待目标主机的回答报文
		{
			if等待超时，则输出超时提示并返回则返回上一步，继续发送下一个ICMP探测
			if在限定的时间内有数据返回，则调用recvPacket来获取返回的数据。
			{
				if接收到的数据是当前等待的数据
				{
					输出往返时间和TTL
					返回上一步继续下一次的探测报文发送
				}
				if接收到的数据是之前的ICMP探测的回答报文则继续等待当前的回答报文
			}
		}
	}			
}


sendPacket函数的PDL
{
	封装ICMP数据报的头部
	{
		ICMP报文类型ICMP_ECHO
		ICMP代码类型0
		ICMP报文序列号
		ICMP报文ID
	}
	获取当前时间，并将当前时间填入ICMP报文的数据段中
	计算报文校验和，并将其填入ICMP报文的校验和字段中
	调用系统API发送封装好的ICMP报文
}


recvPacket函数的PDL
{
	调用系统API获取ICMP回答报文
	获取ip报文头的长度，并跳IP头。获取ICMP报文的开始地址
	校验ICMP报文

	判断报文的ID，if不与进程ID相等则返回0

	判断报文的序号
	if为当前等待的报文，则返回1
	if为之前的报文则返回2
}















































